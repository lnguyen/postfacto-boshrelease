pid /var/vcap/data/postfacto/nginx.pid;
daemon off;

worker_processes  5;

events {
  worker_connections  1024;
}

error_log /var/vcap/sys/log/postfacto/error.log;

http {
  server_tokens off;

  client_body_temp_path /var/vcap/data/postfacto/tmp/client_body;
  proxy_temp_path /var/vcap/data/postfacto/tmp/proxy;
  fastcgi_temp_path /var/vcap/data/postfacto/tmp/fastcgi;
  uwsgi_temp_path /var/vcap/data/postfacto/tmp/uwsgi;
  scgi_temp_path /var/vcap/data/postfacto/tmp/scgi;


  include   /var/vcap/packages/nginx/conf/mime.types;

  access_log  "/var/vcap/sys/log/postfacto/access.log";
  error_log   "/var/vcap/sys/log/postfacto/error.log";

  sendfile    on;
  tcp_nopush  on;
  tcp_nodelay on;


  # Omitting this parameter inhibits nginx from starting on OpenStack
  types_hash_max_size 2048;

  keepalive_timeout  65;

  # Redirects all http traffic to https
  server {
    listen 80;
    rewrite ^ https://$host$request_uri? permanent;
  }

  map $http_upgrade $connection_upgrade {
      default upgrade;
      '' close;
  }

  # Proxy non-static traffic to thin
  server {
    listen 443 ssl;

    ssl_certificate     "/var/vcap/jobs/postfacto/config/nginx.crt";
    ssl_certificate_key "/var/vcap/jobs/postfacto/config/nginx.key";
    ssl_prefer_server_ciphers On;
    ssl_protocols TLSv1.2;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK;

    proxy_buffering         off;
    proxy_buffer_size       8k; # UAA cookies result in headers larger than the default value 4K

    proxy_send_timeout      3600s; # nginx sending to upstream; between two write operations
    proxy_read_timeout      3600s; # nginx waiting on upstream; between two read operations

    proxy_set_header    Host              $http_host;
    proxy_set_header    X-Real-IP         $remote_addr;
    proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header    X-Forwarded-Proto https;



    # Send any file via Nginx
    proxy_set_header  X-Sendfile-Type   X-Accel-Redirect;
    proxy_set_header  X-Accel-Mapping   /=/root-accel-mapping/;

    location ~ ^/root-accel-mapping/(.*) {
      internal;
      alias /$1;
    }


    location / {
      proxy_pass http://localhost:3000;
    }
    location /cable {
        proxy_pass http://localhost:3000;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto https;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_redirect off;
    }
  }
}
